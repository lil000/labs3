#include <iostream>
#include <string>

using namespace std;

struct Product {
    string name;
    int quantity;
    double price;
    Product* next;
};

// Функция для добавления товара в начало списка
void addProductToStart(Product** head, string name, int quantity, double price) {
    Product* newProduct = new Product();
    newProduct->name = name;
    newProduct->quantity = quantity;
    newProduct->price = price;
    newProduct->next = *head;
    *head = newProduct;
}

// Функция для добавления товара в конец списка
void addProductToEnd(Product** head, string name, int quantity, double price) {
    Product* newProduct = new Product();
    newProduct->name = name;
    newProduct->quantity = quantity;
    newProduct->price = price;
    newProduct->next = nullptr;

    if (*head == nullptr) {
        *head = newProduct;
        return;
    }

    Product* last = *head;
    while (last->next != nullptr) {
        last = last->next;
    }
    last->next = newProduct;
}

// Функция для добавления товара в список после заданного элемента
void addProductAfter(Product* prevProduct, string name, int quantity, double price) {
    if (prevProduct == nullptr) {
        cout << "Previous product not found in the list." << endl;
        return;
    }

    Product* newProduct = new Product();
    newProduct->name = name;
    newProduct->quantity = quantity;
    newProduct->price = price;
    newProduct->next = prevProduct->next;
    prevProduct->next = newProduct;
}

// Функция для добавления товара в список перед заданным элементом
void addProductBefore(Product** head, Product* nextProduct, string name, int quantity, double price) {
    if (*head == nullptr || nextProduct == nullptr) {
        cout << "Next product not found in the list." << endl;
        return;
    }

    Product* newProduct = new Product();
    newProduct->name = name;
    newProduct->quantity = quantity;
    newProduct->price = price;
    newProduct->next = nextProduct;

    Product* temp = *head;
    while (temp->next != nextProduct) {
        temp = temp->next;
    }
    temp->next = newProduct;
}

// Функция для удаления из списка элемента с заданным именем
void removeProduct(Product** head, string name) {
    if (*head == nullptr) {
        return;
    }

    if ((*head)->name == name) {
        Product* temp = *head;
        *head = (*head)->next;
        delete temp;
        return;
    }

    Product* temp = *head;
    while (temp->next != nullptr && temp->next->name != name) {
        temp = temp->next;
    }

    if (temp->next == nullptr) {
        return;
    }

    Product* toDelete = temp->next;
    temp->next = temp->next->next;
    delete toDelete;
}

// Функция для вывода содержания списка на экран
void printList(Product* head) {
    while (head != nullptr) {
        cout << "Name: " << head->name << ", Quantity: " << head->quantity << ", Price: " << head->price << endl;
        head = head->next;
    }
}

int main() {
    Product* head = nullptr;

    // Добавление товаров в список
    addProductToStart(&head, "Bread", 10, 2.5);
    addProductToEnd(&head, "Milk", 20, 1.5);
    addProductAfter(head, "Butter", 15, 3.0);
    addProductBefore(&head, head->next, "Cheese", 25, 4.5);

    // Вывод содержания списка на экран
    printList(head);

    // Удаление товара из списка
    removeProduct(&head, "Cheese");

    // Вывод содержания списка на экран после удаления
    cout << "List after removing Cheese:" << endl;
    printList(head);

    return 0;
}
